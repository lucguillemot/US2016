{
    "contents" : "library(dplyr)\nlibrary(ggplot2)\nlibrary(classInt)\n\n####################################################\n## FIRST ROUND #####################################\n####################################################\n\n# Get Regions codes\nregCodes <- read.csv(\"CodesRegions2016.csv\")\nnames(regCodes) <- c(\"INSEE\", \"REG2016\") #rename the variables.\n\n# Read electoral data for the first round\nreg <- read.csv('Reg_15_Resultats_Communes_T1.csv')\n\n# Add zeros to Departement and Communes INSEE codes.\n## change type to character to use the fonction nchar()\nreg$Code.du.département <- as.character(reg$Code.du.département)\nreg$Code.de.la.commune <- as.character(reg$Code.de.la.commune)\n\nfor (i in 1:length(reg$Code.du.département)) {\n      if (nchar(reg$Code.du.département[i])<2) {\n            reg$Code.du.département[i] <- paste(\"0\", reg$Code.du.département[i], sep=\"\")\n      }\n      if (nchar(reg$Code.de.la.commune[i])<2) {\n            reg$Code.de.la.commune[i] <- paste(\"00\", reg$Code.de.la.commune[i], sep=\"\")\n      }\n      if (nchar(reg$Code.de.la.commune[i])<3) {\n            reg$Code.de.la.commune[i] <- paste(\"0\", reg$Code.de.la.commune[i], sep=\"\")\n      }\n}\n\n## create a column with the unique INSEE code\nreg <- mutate(reg, INSEE=paste(reg$Code.du.département, reg$Code.de.la.commune, sep=\"\"))\nreg$Code.de.la.commune<-NULL\n# select first columns with not-lists-related data + Abstention rate\nregdata <- select(reg,INSEE,DPT=Code.du.département,NAME=Libellé.de.la.commune,ABST1=X..Abs.Ins)\n# Add population data\npop <- read.csv('../POP2012/POP2012.csv')\nregdata <- merge(regdata,pop, by=\"INSEE\")\n# select list-related columns\nregT1 <- select(reg, INSEE, contains(\"Nuance.Liste\"), contains(\"X..Voix.Exp\"), contains(\"X..Voix.Ins\"))\n\n#Find the max value\nregT1$max <- apply(regT1[15:27], 1, which.max) # where is the max value\nregT1 <- regT1 %>% mutate(colonne=max+1) # Column index of the label of the max value\nfor (j in 1:length(regT1$INSEE)) {\n      # get the label of max value (the list with the maximum of votes)\n      regT1$winnerT1[j] <- as.character(regT1[j,regT1$colonne[j]])\n}\n\n# find the values for 'LFN' (Liste Front National)\nregT1$Ifn <- apply(regT1[2:14], 1, function(x) which(x==\"LFN\"))\nregT1 <- regT1 %>% mutate(Indexfn=as.numeric(Ifn)+14, IndexfnInscrits=as.numeric(Ifn)+27)\nfor (h in 1:length(regT1$INSEE)) {\n      regT1$PCFNT1[h] <- as.numeric(regT1[h,regT1$Indexfn[h]])\n      regT1$PCFNT1INSCRITS[h] <- as.numeric(regT1[h,regT1$IndexfnInscrits[h]])\n}\n\n# join the two tables with relevant variables\n## select the relevant variable\nregWinnerFnT1 <- select(regT1, INSEE, winnerT1, PCFNT1, PCFNT1INSCRITS)\nreg <- merge(regdata,regWinnerFnT1, by=\"INSEE\")\nreg <- merge (reg, regCodes, by=\"INSEE\")\n\n# display the number of occurrences of each list\ntable(reg$winnerT1) \n\n# get the decile values\nquantile(regdata$ABST1, probs=c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1))\nquantile(reg$PCFNT1, probs=c(0.2,0.4,0.6,0.8,1))\n\n# Groupe les listes par affinités politiques. (le FN est tout seul)\nRG2015X <- reg %>% mutate(winT1=ifelse(winnerT1==\"LEXG\"|winnerT1==\"LCOM\"|winnerT1==\"LFG\",\"EXG\",winnerT1))\nRG2015X <- RG2015X %>% mutate(winT1=ifelse(winnerT1==\"LSOC\"|winnerT1==\"LUG\"|winnerT1==\"LRDG\"|winnerT1==\"LDVG\",\"GAUCHE\",winT1))\nRG2015X <- RG2015X %>% mutate(winT1=ifelse(winnerT1==\"LVEG\"|winnerT1==\"LVEC\"|winnerT1==\"LECO\",\"ECOLO\",winT1))\nRG2015T1 <- RG2015X %>% mutate(winT1=ifelse(winnerT1==\"LLR\"|winnerT1==\"LUD\"|winnerT1==\"LDLF\"|winnerT1==\"LDVD\",\"DROITE\",winT1))\n\n# House keeping (delete and reorder columns)\nRG2015T1$winnerT1 <- NULL\nRG2015T1 <- RG2015T1[,c(1,3,2,8,5,9,4,6,7)]\n\n# Export data for the first round\nwrite.csv(RG2015T1, file=\"DATARG2015T1.csv\")\n\n\ntable(RG2015T1$winT1)\n####################################################\n## SECOND ROUND ####################################\n####################################################\n\nreg <- read.csv('Reg_15_Resultats_Communes_T2.csv')\n\n# Add zeros to Departement and Communes INSEE codes.\n## change type to character to use the fonction nchar()\nreg$Code.du.département <- as.character(reg$Code.du.département)\nreg$Code.de.la.commune <- as.character(reg$Code.de.la.commune)\n\nfor (i in 1:length(reg$Code.du.département)) {\n      if (nchar(reg$Code.du.département[i])<2) {\n            reg$Code.du.département[i] <- paste(\"0\", reg$Code.du.département[i], sep=\"\")\n      }\n      if (nchar(reg$Code.de.la.commune[i])<2) {\n            reg$Code.de.la.commune[i] <- paste(\"00\", reg$Code.de.la.commune[i], sep=\"\")\n      }\n      if (nchar(reg$Code.de.la.commune[i])<3) {\n            reg$Code.de.la.commune[i] <- paste(\"0\", reg$Code.de.la.commune[i], sep=\"\")\n      }\n}\n## create a column with the unique INSEE code\nreg <- mutate(reg, INSEE=paste(reg$Code.du.département, reg$Code.de.la.commune, sep=\"\"))\nreg$Code.de.la.commune<-NULL\n\n# select first column with abstention rate\nregT2ABST <- select(reg,INSEE,ABST2=X..Abs.Ins)\n# select list-related columns\nregT2 <- select(reg, INSEE, contains(\"Nuance.Liste\"), contains(\"X..Voix.Exp\"))\n\n#Find the max value\nregT2$max <- apply(regT2[6:9], 1, which.max) # where is the max value\nregT2 <- regT2 %>% mutate(colonne=max+1) # Column index of the label of the max value\nfor (j in 1:length(regT2$INSEE)) {\n      regT2$winnerT2[j] <- as.character(regT2[j,regT2$colonne[j]])\n}\n\n# find the value for 'LFN' (Liste Front National)\nregT2$Ifn <- apply(regT2[2:5], 1, function(x) which(x==\"LFN\"))\nregT2 <- regT2 %>% mutate(Indexfn=as.numeric(Ifn)+5)\nfor (h in 1:length(regT2$INSEE)) {\n      regT2$PCFNT2[h] <- as.numeric(regT2[h,regT2$Indexfn[h]])\n}\n\n# join the two tables with relevant variables\n## select the relevant variable\nregWinnerFnT2 <- select(regT2, INSEE, PCFNT2,winnerT2)\nregT2 <- merge(regT2ABST,regWinnerFnT2, by=\"INSEE\")\n\nunique(regT2$winner)\n\n# Groupe les listes par affinités politiques. (le FN est tout seul)\nRG2015T2 <- regT2 %>% mutate(winnerT2=ifelse(winnerT2==\"LDVG\"|winnerT2==\"LUG\"|winnerT2==\"LSOC\",\"GAUCHE\",winnerT2))\n\n# display the number of occurrences of each list\ntable(RG2015T2$winner)\n\nwrite.csv(RG2015T2, file=\"DATARG2015T2.csv\")\n\n\n####################################################\n## DIFFERENCE BETWEEN ROUNDS #######################\n####################################################\n\n# Merge first and second round data\nRG2015 <- merge(RG2015T1,RG2015T2, by=\"INSEE\")\n\n# Search data for Marseille\nRG2015[RG2015$INSEE==13055,]\n\n# Calculate difference in ABSTENTION and PCfn between the two rounds\nRG2015<-RG2015 %>% mutate(DIFF_ABS=ABST2-ABST1, DIFF_PCFN=PCFNT2-PCFNT1)\n\n# export data for both rounds.\nwrite.csv(RG2015, \"DATARG2015.csv\")\n\ntable(RG2015$winnerT2)\n####################################################\n## POST PRODUCTION #################################\n####################################################\n\n# get the decile values\nquantile(RG2015$DIFF_ABS, probs=c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1))\nquantile(RG2015$PCFNT1INSCRITS, probs=c(0.2,0.4,0.6,0.8,1))\n\n\n#plot FN / Abstention\nP5000 <- filter(RG2015, as.integer(POP) > 5000)\nP5000Reg <- filter(RG2015, REG2016==32|REG2016==93)\nP5000Or<-arrange(P5000, desc(ABS))\ng<-ggplot(P5000Reg, aes(DIFF_ABS,DIFF_PCFN))\ng+geom_point(aes(color=as.factor(REG2016)))\n\n# Number of municipalities with less than 1000 inhabitants\nsum(pop$POP<1000)\n\n",
    "created" : 1460255236078.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2300058531",
    "id" : "595346EB",
    "lastKnownWriteTime" : 1450808930,
    "path" : "~/Documents/research/postdoc/maps/FR2015/data/RG2015/RG2015.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}