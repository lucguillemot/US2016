{
    "contents" : "source(\"data/lib_var.R\")\nsource(\"data/util.R\")\nsource(\"data/temporalhclust.R\")\nnclass <- 15\nlinkage = \"complete\"\n\n  # Create a data frame with variables for each year\n  sfbact.cc.2000 <- readAndParseCensusData(2000, \"R11097593_SL140-2000-Census.csv\")\n  sfbact.cc.2010 <- readAndParse(2010, \"R11097565_SL140-2010\")\n  sfbact.cc.2014 <- readAndParse(2014, \"R11088321_SL140-2014\")\n# sfbact.cc.2000[sfbact.cc.2000$Geo_FIPS==\"6001402700\",]\n# sfbact.cc.2000[sfbact.cc.2000$Geo_FIPS==\"6075012602\",]\n# df[df$Geo_FIPS==\"6075012602\",]\n  # Standardize data (square root + range standardization)\n  sfbact.cc.2000.st <- standardizeData(sfbact.cc.2000)\n  sfbact.cc.2010.st <- standardizeData(sfbact.cc.2010)\n  sfbact.cc.2014.st <- standardizeData(sfbact.cc.2014)\n\n  # Perform (temporal) hierarchical clustering\n  sfbact.2000.hc.cl <- clusteringByYear(sfbact.cc.2000.st, 2000)\n  sfbact.2010.hc.cl <- clusteringByYear(sfbact.cc.2010.st, 2010)\n  sfbact.2014.hc.cl <- clusteringByYear(sfbact.cc.2014.st, 2014)\n\n  # Export csv data file with raw data + cluster number\n  # used in the d3 plot of raw variables\n  sfbact.2000.var.cl <- exportVarData(sfbact.cc.2000, sfbact.2000.hc.cl, 2000)\n  sfbact.2010.var.cl <- exportVarData(sfbact.cc.2010, sfbact.2010.hc.cl, 2010)\n  sfbact.2014.var.cl <- exportVarData(sfbact.cc.2014, sfbact.2014.hc.cl, 2014)\n  \n  # Calculate means, distances to the mean\n  # and export data for the radar plot\n  sfbact.2000.mdev <- radarPlotData(sfbact.cc.2000.st, sfbact.2000.hc.cl, 2000)\n  sfbact.2010.mdev <- radarPlotData(sfbact.cc.2010.st, sfbact.2010.hc.cl, 2010)\n  sfbact.2014.mdev <- radarPlotData(sfbact.cc.2014.st, sfbact.2014.hc.cl, 2014)\n\n  unique(sfbact.2000.hc.cl$cluster)\n  unique(sfbact.2010.hc.cl$cluster)\n  unique(sfbact.2014.hc.cl$cluster)\n\n\n################################################\n## Spatial overlap of clusters over time #######\n################################################\n# GET relationship file between Geo_FIPS 2000 and Geo_FIPS 2010\ngeo.rel <- read.csv(\"data/census/relationship.csv\") %>% select(d,m)\nnames <- c(\"geo2010\", \"Geo_FIPS\")\nnames(geo.rel) <- names\nsfbact.2000.hc.cl <- merge(sfbact.2000.hc.cl, geo.rel, by = \"Geo_FIPS\")\nsfbact.2000.hc.cl$Geo_FIPS <- NULL # removes the 2000 Geo_FIPS\nnames <- c(\"cluster\", \"Geo_FIPS\")\nnames(sfbact.2000.hc.cl) <- names\n\n# merge all clusters files\ncl1 <- merge(sfbact.2000.hc.cl, sfbact.2010.hc.cl, by = \"Geo_FIPS\")\ncl <- merge(cl1, sfbact.2014.hc.cl, by = \"Geo_FIPS\")\nnames <- c(\"Geo_FIPS\", \"cl2000\", \"cl2010\", \"cl2014\")\nnames(cl) <- names\n\ncl.change <- cl %>% select(Geo_FIPS, cl2014, cl2010) %>% \n  group_by(cl2014, cl2010) %>%\n  tally() # just 'tally()' count the number of occurrences without summing!\n\n\n################################################\n## Cluster Reassignment ########################\n################################################\n\n# 2014 is the base year. New cluster numbers are assigned to\n# previous years according to the maximal number of overlapping\n# tracts with 2014.\n\ncl.2014 <- c(1:15) # 2014 and  2010 OLD\ncl.2010.new <- c(1, 6, 3, 8, 5, \n                 3, 4, 7, 8, 13, \n                 10, 13, 12, 2, 5) # 2010 NEW - we lose clusters 9, 11, 14 & 15\n\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 1] <- cl.2010.new[1]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 2] <- cl.2010.new[2]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 3] <- cl.2010.new[3]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 4] <- cl.2010.new[4]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 5] <- cl.2010.new[5]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 6] <- cl.2010.new[6]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 7] <- cl.2010.new[7]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 8] <- cl.2010.new[8]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 9] <- cl.2010.new[9]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 10] <- cl.2010.new[10]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 11] <- cl.2010.new[11]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 12] <- cl.2010.new[12]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 13] <- cl.2010.new[13]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 14] <- cl.2010.new[14]\nsfbact.2010.hc.cl$cluster[sfbact.2010.hc.cl$cluster == 15] <- cl.2010.new[15]\n\n# Re evaluate change\n# merge all clusters files\ncl1 <- merge(sfbact.2000.hc.cl, sfbact.2010.hc.cl, by = \"Geo_FIPS\")\ncl <- merge(cl1, sfbact.2014.hc.cl, by = \"Geo_FIPS\")\nnames <- c(\"Geo_FIPS\", \"cl2000\", \"cl2010\", \"cl2014\")\nnames(cl) <- names\n\ncl.change <- cl %>% select(Geo_FIPS, cl2010, cl2000) %>% \n  group_by(cl2010, cl2000) %>%\n  tally() # just 'tally()' count the number of occurrences without summing!\n\n# New cluster numbers are assigned to\n# 2000 according to the maximal number of overlapping\n# tracts with 2010.\n\ncl.2010 <- c(1:15) # 2010 and  2000 OLD\ncl.2000.new <- c(1, 14, 2, 3, 11, \n                 0, 2, 6, 0, 2, \n                 0, 2, 0, 0, 0) # 2000 NEW\n\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 1] <- cl.2000.new[1]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 2] <- cl.2000.new[2]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 3] <- cl.2000.new[3]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 4] <- cl.2000.new[4]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 5] <- cl.2000.new[5]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 6] <- cl.2000.new[6]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 7] <- cl.2000.new[7]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 8] <- cl.2000.new[8]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 9] <- cl.2000.new[9]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 10] <- cl.2000.new[10]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 11] <- cl.2000.new[11]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 12] <- cl.2000.new[12]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 13] <- cl.2000.new[13]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 14] <- cl.2000.new[14]\nsfbact.2000.hc.cl$cluster[sfbact.2000.hc.cl$cluster == 15] <- cl.2000.new[15]\n\n\n\n\n\n# Export to CSVs\nwrite.csv(sfbact.2000.hc.cl, \n          file=paste(\"data/censushclust/clusters/\", linkage, \"/\", nclass, \"/sfbact-clusters-\",\n                     \"2000\", \n                     \".csv\", \n                     sep = \"\"))\nwrite.csv(sfbact.2010.hc.cl, \n          file=paste(\"data/censushclust/clusters/\", linkage, \"/\", nclass, \"/sfbact-clusters-\",\n                     \"2010\", \n                     \".csv\", \n                     sep = \"\"))\n\n##############################################\n### EXPORT DATA FOR SANKEY DIAGRAM ###########\n##############################################\n\n\n# Re evaluate change\n# merge all clusters files\ncl1 <- merge(sfbact.2000.hc.cl, sfbact.2010.hc.cl, by = \"Geo_FIPS\")\ncl <- merge(cl1, sfbact.2014.hc.cl, by = \"Geo_FIPS\")\nnames <- c(\"Geo_FIPS\", \"cl2000\", \"cl2010\", \"cl2014\")\nnames(cl) <- names\n\ncl1.2 <- cl %>% group_by(cl2000, cl2010) %>%\n  tally() %>%\n  mutate(cluster.source = cl2000-1, \n         cluster.target = cl2010 + (nclass-1)) %>%\n  select(cluster.source, cluster.target, n)\ncl1.2$cl2000 <- NULL\n\ncl2.3 <- cl %>% group_by(cl2010, cl2014) %>%\n  tally() %>%\n  mutate(cluster.source = cl2010 + (nclass - 1),\n         cluster.target = cl2014 + ((nclass*2) - 1)) %>%\n  select(cluster.source, cluster.target, n)\ncl2.3$cl2010 <- NULL\n\ncl.1.2.3 <- as.data.frame(rbind(cl1.2, cl2.3)) # as df to dplyr ungroup\n\nlinks <- cl.1.2.3 %>% select(source = cluster.source, target = cluster.target, value = n) %>% \n  toJSON(pretty = TRUE)\n\n#names <- c(as.character(1:15))\nnames <- c(\"Cluster One\",\n           \"Cluster Two\",\n           \"Cluster Three\",\n           \"Cluster Four\",\n           \"Cluster Five\",\n           \"Cluster Six\",\n           \"Cluster Seven\",\n           \"Cluster Eight\",\n           \"Cluster Nine\",\n           \"Cluster Ten\",\n           \"Cluster Eleven\",\n           \"Cluster Twelve\",\n           \"Cluster Thirteen\",\n           \"Cluster Fourteen\",\n           \"Cluster Fifteen\")\n\nnames <- rep(names,3)\nlength(names)\n\nnodes <- as.data.frame(matrix(ncol=2,nrow=length(names)))\nfor (i in 0:length(names)) {\n  nodes[i, 1] <- i-1\n  nodes[i, 2] <- names[i]\n}\nnames(nodes) <- c(\"node\", \"name\")\nnodes <- toJSON(nodes, pretty = T)\n\nwrite(paste(\"{\\\"nodes\\\":\n\", nodes, \",\n\\\"links\\\":\n\",links, \"}\", sep=\"\"), \"data/censushclust/sankey/sankey.json\")\n\n\n\n\n\n##############################################\n### MEASURE CHANGE ###########################\n##############################################\n# count the number of class change for each tract.\n\ncl$change <- 0 # Initiate an empty field\nfor (i in 1:length(cl$Geo_FIPS)) {\n  if (cl[i,2] != cl[i,3]) {cl[i,5] <- 1}\n  if (cl[i,3] != cl[i,4]) {cl[i,5] <- cl[i,5]+1}\n}\nunique(cl[,5])\n\nnames(cl) <- c(\"Geo_FIPS\", \"cl2000\", \"cl2010\", \"cl2014\", \"change\")\n\nwrite.csv(cl, \npaste(\"data/censushclust/change/\", linkage, \"/\", nclass, \"/change.csv\", sep = \"\"))\n###################################################\n\n\n\n\n\n##############################################\n### DESCRIPTION OF CLUSTERS ##################\n##############################################\n\ncl2014 <- sfbact.hc.clusters %>% filter(year==2014)\nsfbact.cc.2014.geo <- sfbact.cc.2014$Geo_FIPS\nsfbact.cc.2014$year <- NULL\nsfbact.cc.2014$Geo_FIPS <- NULL\n\nx <-sfbact.cc.2013$perCapitaIncome\n\nhist(x)\nhist(log(x+sqrt(x^2+1)))\nhist(log(2*x))\n\npairs(sfbact.cc.[,c(9,10,11,12,13)])\n# Standardize data\nsfbact.cc.2014.scaled <- as.data.frame(scale(sfbact.cc.2014))\n# Check standard deviation = 1 and mean = 0\napply(sfbact.cc.2014.scaled, 2, sd)\napply(sfbact.cc.2014.scaled, 2, mean) ## it is not...\n\nvar2014 <- cbind(sfbact.cc.2014.geo,sfbact.cc.2014.scaled, cl2014)\nvar2014[,1] <- NULL\ncolnames(var2014) <- c(\"V1\", \"V2\", \"V3\", \"V4\", \"V5\", \"V6\", \"V7\", \"V8\", \"V9\", \"V10\", \"V11\", \"V12\", \"Geo_FIPS\", \"year\", \"cluster\")\n\n# Group by Clusters and calculate the mean distance to the mean\n# for each cluster\nvar2014.cl.means <- var2014 %>% group_by(cluster) %>% \n  summarize(MV1=mean(V1),\n            MV2=mean(V2),\n            MV3=mean(V3),\n            MV4=mean(V4),\n            MV5=mean(V5),\n            MV6=mean(V6),\n            MV7=mean(V7),\n            MV8=mean(V8),\n              MV9=mean(V9),\n              MV10=mean(V10),\n              MV11=mean(V11),\n              MV12=mean(V12))\n\nplot(var2014$medianAge)\n\n# Reshape the data for plotting\nmelted <- melt(cl2014.means.dev)\nmelted$cluster <- 1:10\nmelted <- melted[-c(1:10),]\n\n# Plot the distances to the mean for each variable, for each cluster\npng(\"data/clusters_desc.png\", \n  width = 500, \n  height = 1000) ## Open the PNG device\ng <- ggplot(melted, aes(variable,value, fill=factor(cluster)))\ng+facet_grid(cluster~.)+geom_bar(stat=\"identity\")\ndev.off()",
    "created" : 1460163034650.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2721992344",
    "id" : "25012298",
    "lastKnownWriteTime" : 1459211116,
    "path" : "~/Documents/research/postdoc/geodemographics/data/sfbact-census.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}